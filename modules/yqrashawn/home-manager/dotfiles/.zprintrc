;; -*- mode: clojure -*-
;; vi: ft=clojure
{:search-config? true
 :cwd-zprintrc?  true
 :width          80
 :style          [;; community style
                  ;; https://github.com/kkinnear/zprint/blob/main/doc/reference.md#community
                  :community

                  ;; no comma in map
                  :no-comma
                  :justified

                  :rj-var

                  ;; justify :as, :refer ... in (ns :require (...)) form
                  ;; https://github.com/kkinnear/zprint/blob/main/doc/reference.md#require-justify
                  :require-justify


                  ;; respect all newlines
                  ;; https://github.com/kkinnear/zprint/blob/main/doc/reference.md#respect-nl
                  :respect-nl

                  ;; respect blank line
                  ;; https://github.com/kkinnear/zprint/blob/main/doc/reference.md#respect-bl
                  :respect-bl]
 :fn-map
 {"reg-sub"         :arg1-pair
  "list-comp"       :binding
  "defview"         :arg1-body
  "letsubs"         :binding
  "testing"         :arg1-body
  "with-deps-check" :arg1-body
  "ns"              [:arg1-body
                     {:list   {:respect-nl? false}
                      :vector {:respect-nl? false}}]
  "->"              [:noarg1-body
                     {:list {:constant-pair? false
                             :force-nl?      false}
                      :next-inner-restore [[:list :constant-pair?]]}]
  "set!"            "reset!"
  "assoc-when"      "assoc"
  "assoc-some"      "assoc"
  "conj-when"       "conj"
  "conj-some"       "conj"}
 :style-map
 {:no-comma {:map {:comma? false}}}}
