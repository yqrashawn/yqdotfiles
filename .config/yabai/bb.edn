
{:paths ["./" "./lib"]
 :tasks
 {nrepl   {:requires ([babashka.fs :as fs]
                      [babashka.process :as p :refer [process]]
                      [babashka.wait :as wait])
           :task     (let [port (with-open [sock (java.net.ServerSocket. 0)] (.getLocalPort sock))
                           proc (process (str "bb nrepl-server " port) {:inherit true})]
                       (wait/wait-for-port "localhost" port)
                       (spit ".nrepl-port" port)
                       (fs/delete-on-exit ".nrepl-port")
                       (deref proc))}
  -yh     {:requires ([yabai :refer-all])}
  -focush {:depends [-yh]
           :task    (defn f [direction]
                      (let [{:keys [space]}        (cur-win)
                            space-wins             (space-win space)
                            _ (prn space-wins)
                            same-space-zoomed-wins (reduce (fn [acc {:keys [zoom-parent zoom-fullscreen id]}]
                                                             (cond (pos? zoom-parent)
                                                                   (conj acc {:toggle :zoom-parent :id id})
                                                                   (pos? zoom-fullscreen)
                                                                   (conj acc {:toggle :zoom-fullscreen :id id})
                                                                   :else acc))
                                                           [] space-wins)]
                        (doseq [{:keys [toggle id]} same-space-zoomed-wins]
                          (y :window id :--toggle toggle))
                        (y :window :--focus direction)))}
  focus   {:depends  [-focush]
           :requires ([clojure.tools.cli :refer [parse-opts]])
           :task     (let [cli-options         [["-d" "--direction DIRECTION" "Focus direction"
                                                 :default :prev
                                                 :parse-fn keyword]]
                           {:keys [options]}   (parse-opts *command-line-args* cli-options)
                           {:keys [direction]} options]
                       (prn options)
                       (f direction))}}

 :deps {hashp/hashp {:mvn/version "0.2.1"}}}
